// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ServiceStation.Persistense;

#nullable disable

namespace ServiceStation.Persistense.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ServiceStation.Domain.Vehicle", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Body")
                        .HasColumnType("int");

                    b.Property<int>("Breaks")
                        .HasColumnType("int");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Engine")
                        .HasColumnType("int");

                    b.Property<double>("State")
                        .HasColumnType("float");

                    b.Property<int>("Undercarriage")
                        .HasColumnType("int");

                    b.Property<int>("Wheels")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Vehicles");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Vehicle");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("ServiceStation.Domain.Bus", b =>
                {
                    b.HasBaseType("ServiceStation.Domain.Vehicle");

                    b.Property<bool>("ChangeSeats")
                        .HasColumnType("bit");

                    b.Property<int>("InteriorAndHandrails")
                        .HasColumnType("int");

                    b.HasDiscriminator().HasValue("Bus");
                });

            modelBuilder.Entity("ServiceStation.Domain.Car", b =>
                {
                    b.HasBaseType("ServiceStation.Domain.Vehicle");

                    b.Property<bool>("WheelBalancing")
                        .HasColumnType("bit");

                    b.HasDiscriminator().HasValue("Car");
                });

            modelBuilder.Entity("ServiceStation.Domain.Truck", b =>
                {
                    b.HasBaseType("ServiceStation.Domain.Vehicle");

                    b.Property<int>("Hydraulics")
                        .HasColumnType("int");

                    b.HasDiscriminator().HasValue("Truck");
                });
#pragma warning restore 612, 618
        }
    }
}
